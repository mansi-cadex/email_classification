apiVersion: apps/v1
kind: Deployment
metadata:
  name: email-classification
  namespace: {{ .Values.namespace }}
  labels:
    app: email-classification
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: email-classification
  template:
    metadata:
      labels:
        app: email-classification
    spec:
      containers:
        - name: email-classification
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: 5000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: email-classification-config
            - secretRef:
                name: email-classification-secret
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: {{ .Values.deployment.strategy.type }}
    rollingUpdate:
      maxUnavailable: {{ .Values.deployment.strategy.rollingUpdate.maxUnavailable }}
      maxSurge: {{ .Values.deployment.strategy.rollingUpdate.maxSurge }}
  revisionHistoryLimit: {{ .Values.deployment.revisionHistoryLimit }}
  progressDeadlineSeconds: {{ .Values.deployment.progressDeadlineSeconds }} 